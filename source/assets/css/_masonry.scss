@use "sass:math";

$masonry-column-width: 200px;
$masonry-gap: 15px;

.masonry_wall {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax($masonry-column-width, max-content));
    justify-content: center;
    grid-template-rows: none;
    grid-auto-rows: 1px;
    grid-auto-flow: dense;
    grid-gap: 0 $masonry_gap;
    width: #{4 * ($masonry-column-width + $masonry-gap) - $masonry-gap};
    max-width: 100%;
    margin: auto;
}

.masonry_brick {
    max-width: 100%;
}

$aspect-ratios: ("name": "3to1", "width": 3, "height": 1) ("name": "2to1", "width": 2, "height": 1) ("name": "3to2", "width": 3, "height": 2) ("name": "4to3", "width": 4, "height": 3) ("name": "1to1", "width": 1, "height": 1) ("name": "3to4", "width": 3, "height": 4) ("name": "2to3", "width": 2, "height": 3) ("name": "1to2", "width": 1, "height": 2) ("name": "a4landscape", "width": 297, "height": 210) ("name": "a4portrait", "width": 210, "height": 297);

@each $aspect-ratio in $aspect-ratios {
    .masonry_brick_#{map-get($aspect-ratio, "name")} {
        $brick-height: round($masonry-column-width / 1px * (math.div(map-get($aspect-ratio, "height"), map-get($aspect-ratio, "width")))  + math.div($masonry-gap, 1px));
        $row-span: round($brick-height);
        grid-row: auto / span #{$row-span};
        height: #{$brick-height}px;
    }
}

.masonry_brick picture {
    display: flex;
    margin-bottom: 15px;
}
